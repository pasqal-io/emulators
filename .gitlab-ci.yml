.test:
  script:
    - pip install -r test_requirements.txt
    - pip install -e .
    - pytest -vvv --cov-report=term-missing --cov-config=pyproject.toml --cov=emu_mps --cov=emu_base
    - pytest --nbmake docs/notebooks/*.ipynb
    - readme-cov
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'

stages:
  - lint
  - test
  - benchmarks
  - publish
  - pages

lint:
  rules:
    # Run when a merge request is created/updated
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  image: python:3.10
  stage: lint
  script:
    - pip install pre-commit pyproject-flake8
    - pre-commit install
    - pre-commit run --all-files

test-py3.10:
  rules:
    # Run when a merge request is created/updated
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  extends:
    - ".test"
  image: python:3.10
  stage: test

emu_base_publish:
  stage: publish
  rules:
    # Run when a (release) tag is created on the main branch
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"
  trigger:
    strategy: depend
    include:
      - local: ci/emu_base/gitlab-ci-publish.yml

emu_mps_publish:
  stage: publish
  needs:
    - emu_base_publish
  rules:
    # Run when a (release) tag is created on the main branch
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"
  trigger:
    strategy: depend
    include:
      - local: ci/emu_mps/gitlab-ci-publish.yml

emu_mps_benchmarks:
  stage: benchmarks
  allow_failure: true
  rules:
    # Run when a (release) tag is created on the main branch
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"
    # Run on merge requests - benchmarks are manual and this provides the possibility to trigger them
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    # Run on schedule on the main branch
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "schedule"
  trigger:
    strategy: depend
    include:
      - local: ci/emu_mps/gitlab-ci-benchmarks.yml

pages:
  stage: pages
  image: python:3.10
  artifacts:
    paths:
      - public
  rules:
    # Run for every new commit in the main branch
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - pip install -r doc_requirements.txt
    - pip install -e .
    - mkdocs build --clean --strict --site-dir public
