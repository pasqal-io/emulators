# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PACKAGE: "emu-ct"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

.default_rules:
  rules:
    #don't run if were the scheduled pipeline that defines the below variable
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    # Run when an MR is created/updated
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    # Otherwise, we're a commit, but if an open MR exists, don't run
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    # Don't run on releases
    - if: $CI_COMMIT_TAG
      when: never

cache:
  paths:
    - .cache/pip

stages:
  - lint
  - test
  - benchmarks

lint:
  extends:
    - .default_rules
  image: python:3.10
  stage: lint
  script:
    - pip install pre-commit pyproject-flake8
    - pre-commit install
    - pre-commit run --all-files

.test:
    script:
    - pip install hatch
    - hatch run test
    coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'

test-py3.10:
  extends:
    - .default_rules
    - ".test"
  image: python:3.10
  stage: test

benchmarks:
  stage: benchmarks
  rules:
    - if: $CI_COMMIT_BRANCH=="develop" && $CI_PIPELINE_SOURCE == "schedule"
  before_script:
    - apt-get update -y && apt-get install openssh-client -y && apt-get install -y iputils-ping
    - eval $(ssh-agent -s)
    - echo "$BENCH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $VM_IPADDRESS >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - sed -ie "s|BRANCH|$CI_COMMIT_BRANCH|g" ./benchmarks/download_and_benchmark.sh
    - 'ssh -vvv -o StrictHostKeyChecking=accept-new -o ProxyCommand="ssh -o StrictHostKeyChecking=accept-new -W %h:%p -q $JUMPHOST@$VM_IPADDRESS" $BENCHUSER@$DGX_IP < ./benchmarks/download_and_benchmark.sh'
